<?php

require_once 'lib/phpQuery-onefile.php';
/**
 * @file
 *
 * - Sample string:
 * @code
 *  <p>This is the first paragraph. It may be HTML.</p>
 *  <hr/>
 *  <p>This is the second paragraph. It may be HTML.</p>
 *  <hr/>
 *  <p>This is the third paragraph. It may be HTML.</p>
 *  <hr/>
 *  <p>This is the forth paragraph. It may be HTML.</p>
 * @endcode
 *
 * - Desired result:
 *  @code
 *    <div class="columns 4-columns">
 *      <div class="column column-1">
 *        <p>This is the first paragraph. It may be HTML.</p>
 *      </div>
 *      <div class="column column-2">
 *        <p>This is the second paragraph. It may be HTML.</p>
 *      </div>
 *      <div class="column column-3">
 *        <p>This is the third paragraph. It may be HTML.</p>
 *      </div>
 *      <div class="column column-4">
 *        <p>This is the forth paragraph. It may be HTML.</p>
 *      </div>
 *    </div>
 *  @endcode
 *
 *
 *  @todo:
 *  - Check the boundaries
 *  - Only manipulate the continous <p><hr> element blocks
 *
 */

/**
 * Implements hook_filter_info()
 */
function easy_grid_filter_info() {
  $filters['easy_grid'] = array(
    'title' => t('Generate easy gird'),
    'description' => t('Help you to generate some html'),
    'process callback' => 'easy_grid_filter_easy_filter_process',
    'tips callback' => 'easy_grid_filter_easy_filter_tips',
  );

  return $filters;
}

/**
 * Process callback for filter 'easy_grid'
 */
function easy_grid_filter_easy_filter_process($text, $filter, $format, $langcode, $cache, $cache_id) {
  $pq = phpQuery::newDocument($text);

  // Get the totoal number of direct <p> elements
  $p_el_num = count($pq['> p']->elements);

  // Get all direct children
  $children = $pq['> *'];

  // Remove all the <hr> elements
  foreach($children as $child) {
    if ($child->tagName == 'hr') {
      pq($child)->remove();
      continue;
    }
  }

  // Rebuild new markup
  // $outter_div = phpQuery::newDocument('<div/>');
  // $outter_div['div']->addClass('columns')->addClass($p_el_num . '-columns');


  // Wrap all the <p> elements
  $pq['> p']->wrapAll('<div class="columns '. $p_el_num .'-columns" />');

  // Wrap each single <p> element


  $i = 1;
  foreach($pq['div > p'] as $child) {
    pq($child)->wrap('<div class="column column-' . $i .'" />');
    $i++;
  }

  return $pq->htmlOuter();
}


/**
 * Tips callback for hook_filter_info().
 */
function easy_grid_filter_easy_filter_tips($filter, $format, $long) {


}
